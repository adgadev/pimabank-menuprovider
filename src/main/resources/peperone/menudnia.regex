############## unnamed groups, defined for simplicity ##########
# Unnamed groups should have key preffixed with "TAG_" phrase !!
# '\' char is escape character, so to produce '\' in the output '\\' must be used 

# 13,99 or 13
#TAG_PRICE = \\d+(?:,\\d+)? 

# whole line
#TAG_LINE = ^.*?$

# any string - reluctant, not greedy version
#TAG_ANY_STRING = .*?

######################### NAMED REGEXP GROUPS #######################
# Group names must not contain chars other than letters and digits !
#
# There are three types of named groups : 
#   - LOOP (with suffix LOOPx) - many repetitions of some block of data, i.e. list of menu positions
# 		LOOP named group must contain exactly one BLOCK named group and none NORMAL group (i.e ABCLOOP2 must contain ABCBLOCK3)
#   - BLOCK (with suffix BLOCKx) - one block of data, i.e. one menu position, containing data about id, name, price
#        BLOCK named group may contain multiple NORMAL / LOOP named groups (i.e. ABCBLOCK3 may contain, PRICE4, NAME4, SUBITEMLOOP4)
#   - NORMAL - single data, i.e price
#
# ROOT0 is entry point and behave as BLOCK named group 

# price of meal
PRICE1 = (?<PRICE1>${TAG_PRICE})

# whole line with number and dot, i.e ("1.:)
ID3 = ((?<ID3>^\\d+)\\.$)

# whole line with meal name
NAME3 = (?<NAME3>${TAG_TEXT_LINE})

# menu position
ITEMBLOCK2 = (?<ITEMBLOCK2>${TAG_ANY_STRING}${ID3}${TAG_ANY_STRING}${NAME3})

ITEMLOOP1 = (?<ITEMLOOP1>${ITEMBLOCK2}*)

SOUPNAME1 = (?<SOUPNAME1>${TAG_TEXT_LINE})

SOUPPRICE1 = (?<SOUPPRICE1>${TAG_PRICE})

TAG_MAIN_PRICE = dnia${TAG_ANY_STRING}${PRICE1}

TAG_SOUP = Zupa dnia${TAG_ANY_STRING}${SOUPNAME1}${TAG_ANY_STRING}${SOUPPRICE1}

# Main regular expression
ROOT0 = ${TAG_ANY_STRING}${TAG_MAIN_PRICE}${TAG_ANY_STRING}${ITEMLOOP1}${TAG_ANY_STRING}${TAG_SOUP}${TAG_ANY_STRING};
