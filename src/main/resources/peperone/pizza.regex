# Unnamed groups should have key preffixed with "TAG_" phrase !!
# '\' char is escape character, so to produce '\' in the output '\\' must be used 

# a line of text starting with alphanumeric char 
TAG_TEXT_LINE = ^${TAG_LETTER}.+?$

# a line of text starting with letter or digit
TAG_TEXT = ${TAG_LETTER_OR_DIGIT}.*?$

######################### NAMED REGEXP GROUPS #######################
# Group names must not contain chars other than letters and digits !
#
# There are three types of named groups : 
#   - LOOP (with suffix LOOPx) - many repetitions of some block of data, i.e. list of menu positions
# 		LOOP named group must contain exactly one BLOCK named group and none NORMAL group (i.e ABCLOOP2 must contain ABCBLOCK3)
#   - BLOCK (with suffix BLOCKx) - one block of data, i.e. one menu position, containing data about id, name, price
#        BLOCK named group may contain multiple NORMAL / LOOP named groups (i.e. ABCBLOCK3 may contain, PRICE4, NAME4, SUBITEMLOOP4)
#   - NORMAL - single data, i.e price
#
# ROOT0 is entry point and behave as BLOCK named group 

# whole line with meal name
CATEGORY1 = (?<CATEGORY1>${TAG_TEXT_LINE})

# a number and a dot (they may be in separate lines)
ID3 = ((?<ID3>^\\d+)$?\\.?$)

# whole line with meal name
NAME3 = (?<NAME3>${TAG_TEXT_LINE})

# whole line with meal name
DESC3 = (?<DESC3>${TAG_TEXT})

# price of meal
PRICE5 = (?<PRICE5>${TAG_PRICE})
PRICEBLOCK4 = (?<PRICEBLOCK4>${TAG_ANY_STRING}${PRICE5}${TAG_ANY_STRING})
PRICELOOP3 = (?<PRICELOOP3>${PRICEBLOCK4}{4})

# menu position
ITEMBLOCK2 = (?<ITEMBLOCK2>${TAG_ANY_STRING}${ID3}${TAG_ANY_STRING}${NAME3}${TAG_ANY_STRING}${DESC3}${TAG_ANY_STRING}${PRICELOOP3})
ITEMLOOP1 = (?<ITEMLOOP1>${ITEMBLOCK2}*)

SIZE3 = (?<SIZE3>^Ã˜\\d+$)
SIZEBLOCK2 = (?<SIZEBLOCK2>${TAG_ANY_STRING}${SIZE3}${TAG_ANY_STRING})
SIZELOOP1 = (?<SIZELOOP1>${SIZEBLOCK2}*)

# Main regular expression
ROOT0 = ${TAG_ANY_STRING}${CATEGORY1}${TAG_ANY_STRING}${SIZELOOP1}${TAG_ANY_STRING}${ITEMLOOP1}${TAG_ANY_STRING};
